{"version":3,"sources":["form.js","Weather.js","News.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Button","variant","Checkbox","value","inputProps","Component","Weather","weather","className","color","onClick","alert","News","news","Typography","component","map","item","index","title","HEALTH_API_URL","updateCb","a","fetch","res","json","console","log","App","React","useState","newsList","updateHealth","useEffect","fetchHealth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA2DeA,EAtDf,4JACQ,WACQ,OACQ,gCACQ,uBACA,8BACI,wDAEH,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAhB,sBACD,cAACC,EAAA,EAAD,CACQC,MAAM,UACNC,WAAY,CAAE,aAAc,sBAEpC,uBACA,cAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAhB,8BACA,cAACC,EAAA,EAAD,CACQC,MAAM,UACNC,WAAY,CAAE,aAAc,sBAEnC,uBACD,cAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAhB,wBACA,cAACC,EAAA,EAAD,CACQC,MAAM,UACNC,WAAY,CAAE,aAAc,sBAEpC,uBACA,cAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAhB,gCACA,cAACC,EAAA,EAAD,CACQC,MAAM,UACNC,WAAY,CAAE,aAAc,sBAEjC,uBACH,cAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAhB,mCACA,cAACC,EAAA,EAAD,CACQC,MAAM,UACNC,WAAY,CAAE,aAAc,sBAE9B,uBACN,cAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAhB,+BACA,cAACC,EAAA,EAAD,CACQC,MAAM,UACNC,WAAY,CAAE,aAAc,sBAEzB,uBACX,cAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAhB,gCACA,cAACC,EAAA,EAAD,CACQC,MAAM,UACNC,WAAY,CAAE,aAAc,6BA/CpE,GAA4BC,aCDb,SAASC,EAAT,GAA4B,EAAVC,QAE7B,OACI,sBAAKC,UAAU,UAAf,UACI,8CACA,cAACR,EAAA,EAAD,CAAQC,QAAQ,YAAhB,2BACA,cAACD,EAAA,EAAD,CAAQC,QAAQ,YAAYQ,MAAM,YAClCC,QAAS,kBAAKC,MAAM,sCADpB,gC,YCNG,SAASC,EAAT,GAAsB,IAAPC,EAAM,EAANA,KAE1B,OACQ,sBAAKL,UAAY,OAAjB,UACA,uBACA,cAACM,EAAA,EAAD,CAAYb,QAAQ,KAAKc,UAAU,KAAnC,kCAICF,EAAKG,KAAI,SAACC,EAAMC,GACb,OAAO,6BAAKD,EAAKE,cCRjC,IAAMC,EAAiB,c,4CAEvB,WAA2BC,GAA3B,iBAAAC,EAAA,sEACoBC,MAAMH,GAD1B,cACQI,EADR,gBAEqBA,EAAIC,OAFzB,OAEQA,EAFR,OAIEC,QAAQC,IAAI,CAACF,SACbJ,EAASI,GALX,4C,sBAyBeG,MAjBf,WAAe,MAGoBC,IAAMC,SAAS,IAHnC,mBAGNC,EAHM,KAGIC,EAHJ,KAQb,OAJAH,IAAMI,WAAU,Y,oCACdC,CAAYF,KACX,IAGD,sBAAKxB,UAAU,MAAf,UACE,cAACF,EAAD,IACA,cAACM,EAAD,CAAMC,KAAQkB,IACd,cAAC,EAAD,QChBSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c93e48a.chunk.js","sourcesContent":["import React, { Component } from 'react'   \nimport Toolbar from '@material-ui/core/Toolbar';  \nimport TextField from '@material-ui/core/TextField';  \nimport Checkbox from '@material-ui/core/Checkbox';  \nimport Button from '@material-ui/core/Button';\nexport class Navbar extends Component {  \n        render() {  \n                return (  \n                        <div>  \n                                <br></br>\n                                <div>  \n                                    <h2> Immunity Checklist </h2>\n                                 </div>   \n                                 <Button variant=\"contained\">Exercise</Button>\n                                <Checkbox  \n                                        value=\"primary\"  \n                                        inputProps={{ 'aria-label': 'primary checkbox' }}  \n                                />  \n                                <br></br>\n                                <Button variant=\"contained\">8 hours of Sleep</Button>\n                                <Checkbox  \n                                        value=\"primary\"  \n                                        inputProps={{ 'aria-label': 'primary checkbox' }}  \n                                />  \n                                 <br></br>\n                                <Button variant=\"contained\">Wash Hands</Button>\n                                <Checkbox  \n                                        value=\"primary\"  \n                                        inputProps={{ 'aria-label': 'primary checkbox' }}  \n                                />  \n                                <br></br>\n                                <Button variant=\"contained\">Drink Enough Water</Button>\n                                <Checkbox  \n                                        value=\"primary\"  \n                                        inputProps={{ 'aria-label': 'primary checkbox' }}  \n                                />  \n                                   <br></br>\n                                <Button variant=\"contained\">Fruits and Vegetables</Button>\n                                <Checkbox  \n                                        value=\"primary\"  \n                                        inputProps={{ 'aria-label': 'primary checkbox' }}  \n                                />  \n                                      <br></br>\n                                <Button variant=\"contained\">Destress Activity</Button>\n                                <Checkbox  \n                                        value=\"primary\"  \n                                        inputProps={{ 'aria-label': 'primary checkbox' }}  \n                                />  \n                                           <br></br>\n                                <Button variant=\"contained\">Social Interaction</Button>\n                                <Checkbox  \n                                        value=\"primary\"  \n                                        inputProps={{ 'aria-label': 'primary checkbox' }}  \n                                />  \n                        </div>  \n                )  \n        }  \n}  \n\nexport default Navbar  ","import React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\n\nexport default function Weather({weather}) {\n  \n    return (\n        <div className=\"Weather\">\n            <h1> Immuniti++ </h1>\n            <Button variant=\"contained\">Health Alerts</Button>\n            <Button variant=\"contained\" color=\"secondary\"\n            onClick={()=> alert(\"Resources Currently Not Available\")}>\n            Heath Resources\n            </Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default function News({news}){\n\n    return (\n            <div className = \"News\">\n            <br></br>\n            <Typography variant=\"h2\" component=\"h2\">\n            Public Health Alerts\n            </Typography>\n        \n            {news.map((item, index) => {\n                return <h3>{item.title}</h3>\n            })}\n            </div>\n    )\n}","import './App.css';\nimport React from 'react';\nimport Form from './form.js';\nimport Weather from './Weather';\nimport News from './News';\n\nconst HEALTH_API_URL = '/api/health';\n\nasync function fetchHealth(updateCb) {\n  const res = await fetch(HEALTH_API_URL);\n  const json = await res.json();\n\n  console.log({json});\n  updateCb(json);\n}\n\nfunction App() {\n\n//react hooks\n  const [newsList, updateHealth] = React.useState([]);\n  React.useEffect(() => {\n    fetchHealth(updateHealth);\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Weather/>\n      <News news = {newsList} />\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}